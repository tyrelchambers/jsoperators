{
  "version": 3,
  "sources": ["mdx:routes/addition.md"],
  "sourcesContent": ["\n/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport React from \"react\";\nexport const attributes = {\n  \"meta\": {\n    \"title\": \"Addition operator\",\n    \"description\": \"This addition operator servers two purposes - one for mathematical equations and one for concatinating strings.\"\n  }\n};\nfunction MDXContent(props = {}) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    strong: \"strong\",\n    code: \"code\",\n    em: \"em\"\n  }, props.components), {wrapper: MDXLayout} = _components;\n  const _content = <><_components.h2>{\"Numbers\"}</_components.h2>{\"\\n\"}<_components.p>{\"This addition operator servers two purposes: one for mathematical\\nequations and one for concatinating strings.\"}</_components.p>{\"\\n\"}<_components.p>{\"Another weird example of addition happens when you add a \"}<_components.strong>{\"boolean\"}</_components.strong>{\" to a \"}<_components.strong>{\"number\"}</_components.strong>{\".\"}</_components.p>{\"\\n\"}<_components.p><_components.code>{\"console.log(1 + true); // 2\"}</_components.code></_components.p>{\"\\n\"}<_components.p>{\"This happens because in computer-speak, \"}<_components.strong>{\"true\"}</_components.strong>{\" represents\\na 1 and \"}<_components.strong><_components.em>{\"false\"}</_components.em></_components.strong>{\" represents a 0. Remember the video game\\nconsoles of the old days (Playstation 2) specifically or even modern\\ncomputer power supplies, there is a \\\"1\\\" and a \\\"0\\\" on the power switch to\\nrepresent on and off.\"}</_components.p>{\"\\n\"}<_components.p>{\"In our example, \"}<_components.strong>{\"true\"}</_components.strong>{\" is actually a \\\"1\\\". Just to further\\nexplain this, look at this example showing how \"}<_components.strong>{\"false\"}</_components.strong>{\" is\\nused.\"}</_components.p>{\"\\n\"}<_components.p><_components.code>{\"console.log(1 + false); // 1\"}</_components.code></_components.p>{\"\\n\"}<_components.h2>{\"Strings\"}</_components.h2>{\"\\n\"}<_components.p>{\"If a number and a string are used together, they actually behave a\\nlittle differently.\"}</_components.p>{\"\\n\"}<_components.p><_components.code>{\"console.log(1 + '1'); // 11\"}</_components.code></_components.p>{\"\\n\"}<_components.p>{\"It literally adds the number to the string.\"}</_components.p></>;\n  return MDXLayout ? <MDXLayout {...props}>{_content}</MDXLayout> : _content;\n}\nexport default MDXContent;\n\n\nexport const filename = \"addition.md\";\nexport const headers = typeof attributes !== \"undefined\" && attributes.headers;\nexport const meta = typeof attributes !== \"undefined\" && attributes.meta;\n          "],
  "mappings": ";;;;;;AAEA,mBAAkB;AACX,IAAM,aAAa;AAAA,EACxB,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,eAAe;AAAA,EACjB;AACF;AACA,SAAS,WAAW,QAAQ,CAAC,GAAG;AAC9B,QAAM,cAAc,OAAO,OAAO;AAAA,IAChC,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,IAAI;AAAA,EACN,GAAG,MAAM,UAAU,GAAG,EAAC,SAAS,UAAS,IAAI;AAC7C,QAAM,WAAW,6BAAAA,QAAA,2BAAAA,QAAA,gBAAE,6BAAAA,QAAA,cAAC,YAAY,IAAZ,MAAgB,SAAU,GAAkB,MAAK,6BAAAA,QAAA,cAAC,YAAY,GAAZ,MAAe,iHAAkH,GAAiB,MAAK,6BAAAA,QAAA,cAAC,YAAY,GAAZ,MAAe,6DAA4D,6BAAAA,QAAA,cAAC,YAAY,QAAZ,MAAoB,SAAU,GAAsB,UAAS,6BAAAA,QAAA,cAAC,YAAY,QAAZ,MAAoB,QAAS,GAAsB,GAAI,GAAiB,MAAK,6BAAAA,QAAA,cAAC,YAAY,GAAZ,MAAc,6BAAAA,QAAA,cAAC,YAAY,MAAZ,MAAkB,6BAA8B,CAAmB,GAAiB,MAAK,6BAAAA,QAAA,cAAC,YAAY,GAAZ,MAAe,4CAA2C,6BAAAA,QAAA,cAAC,YAAY,QAAZ,MAAoB,MAAO,GAAsB,yBAAwB,6BAAAA,QAAA,cAAC,YAAY,QAAZ,MAAmB,6BAAAA,QAAA,cAAC,YAAY,IAAZ,MAAgB,OAAQ,CAAiB,GAAsB,iNAAsN,GAAiB,MAAK,6BAAAA,QAAA,cAAC,YAAY,GAAZ,MAAe,oBAAmB,6BAAAA,QAAA,cAAC,YAAY,QAAZ,MAAoB,MAAO,GAAsB,wFAAyF,6BAAAA,QAAA,cAAC,YAAY,QAAZ,MAAoB,OAAQ,GAAsB,YAAa,GAAiB,MAAK,6BAAAA,QAAA,cAAC,YAAY,GAAZ,MAAc,6BAAAA,QAAA,cAAC,YAAY,MAAZ,MAAkB,8BAA+B,CAAmB,GAAiB,MAAK,6BAAAA,QAAA,cAAC,YAAY,IAAZ,MAAgB,SAAU,GAAkB,MAAK,6BAAAA,QAAA,cAAC,YAAY,GAAZ,MAAe,yFAA0F,GAAiB,MAAK,6BAAAA,QAAA,cAAC,YAAY,GAAZ,MAAc,6BAAAA,QAAA,cAAC,YAAY,MAAZ,MAAkB,6BAA8B,CAAmB,GAAiB,MAAK,6BAAAA,QAAA,cAAC,YAAY,GAAZ,MAAe,6CAA8C,CAAgB;AAC1rD,SAAO,YAAY,6BAAAA,QAAA,cAAC;AAAA,IAAW,GAAG;AAAA,KAAQ,QAAS,IAAe;AACpE;AACA,IAAO,mBAAQ;AAIR,IAAM,UAAU,OAAO,eAAe,eAAe,WAAW;AAChE,IAAM,OAAO,OAAO,eAAe,eAAe,WAAW;",
  "names": ["React"]
}
